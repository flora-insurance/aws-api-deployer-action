{
  "basePath": "/",
  "paths": {
    "/party/v1/properties/getFloodInfo": {
      "post": {
        "summary": "Get info flood info about an address",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getFloodInfoUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FloodResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PropertyAccountContactAddress"
            },
            "in": "body",
            "name": "address",
            "description": "address",
            "required": true
          }
        ],
        "tags": [
          "property-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/getFloodInfo",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {},
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/resendEmail": {
      "post": {
        "summary": "Resend an email to validate the email address",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "resendEmailUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ResendEmailRequest"
            },
            "in": "body",
            "name": "resendEmailRequest",
            "description": "resendEmailRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "x-example": "ab48c444-1d55-43d0-a6c1-8522dfe76211",
            "description": "A unique key returned when the user was created. This represents the Cognito ID",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/resendEmail",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/validate": {
      "post": {
        "summary": "Validate the account of a user",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "validateAccountUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ValidateAccountRequest"
            },
            "in": "body",
            "name": "validateAccountRequest",
            "description": "validateAccountRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/validate",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/stripeSubscription": {
      "post": {
        "summary": "Create a new stripe subscription",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "createStripeSubscriptionUsingPOST_1",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateStripeSubscriptionResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/StripeSubscription"
            },
            "in": "body",
            "name": "createStripeSubscriptionRequest",
            "description": "createStripeSubscriptionRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "description": "x-correlationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "stripe-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/stripeSubscription",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties": {
      "post": {
        "summary": "Create a property account",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "createAccountUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateAccountResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PropertyAccount"
            },
            "in": "body",
            "name": "createAccountRequest",
            "description": "createAccountRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "x-example": "ab48c444-1d55-43d0-a6c1-8522dfe76211",
            "description": "A unique key returned when the user was created. This represents the Cognito ID",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/accounts/resetPassword": {
      "post": {
        "summary": "Send a mail to reset the password. The mail contains a link with a unique temporary ID",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "resetPasswordUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            },
            "in": "body",
            "name": "resetEmailRequest",
            "description": "resetEmailRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/accounts/resetPassword",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/accounts/changePassword": {
      "post": {
        "summary": "Change the password of a user in Cognito",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "changePasswordUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            },
            "in": "body",
            "name": "changePasswordRequest",
            "description": "changePasswordRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/accounts/changePassword",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/scheduler/blacklist": {
      "post": {
        "summary": "Update db black list",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "blacklistUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "scheduler-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/scheduler/blacklist",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {},
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/accounts/getMyAccount": {
      "get": {
        "summary": "Get account info",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getAccountUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountPublic"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "description": "x-correlationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/accounts/getMyAccount",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/getMyQuote": {
      "get": {
        "summary": "Get the quote from the subscription",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getMyQuoteUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetMyQuoteResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "allowEmptyValue": false,
            "name": "startDate",
            "format": "date-time",
            "x-example": "01/10/2020",
            "description": "Start date of the policy",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "description": "x-correlationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/getMyQuote",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/health": {
      "get": {
        "summary": "Get the health of the service",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "healthUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Health"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "health-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/health",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {},
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/getFloodInfo": {
      "post": {
        "summary": "Get info flood info about an address",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getPublicFloodInfoUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FloodResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PropertyAccountContactAddress"
            },
            "in": "body",
            "name": "address",
            "description": "address",
            "required": true
          }
        ],
        "tags": [
          "property-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/getFloodInfo",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {},
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/paypalSubscription": {
      "post": {
        "summary": "Create a new stripe subscription",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "createStripeSubscriptionUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreatePaypalSubscriptionResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/PaypalSubscription"
            },
            "in": "body",
            "name": "createPaypalSubscriptionRequest",
            "description": "createPaypalSubscriptionRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "description": "x-correlationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "paypal-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/paypalSubscription",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/accounts/changeEmail": {
      "post": {
        "summary": "Change the email of a user in Cognito and in Salesforce based on a key sent by mail",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "changeEmailUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ChangeEmailRequest"
            },
            "in": "body",
            "name": "changeEmailRequest",
            "description": "changeEmailRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/accounts/changeEmail",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/validateNotMe": {
      "post": {
        "summary": "Inform the system that the owner of the email address is not at the origin of the account creation",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "validateAccountNotMeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ValidateAccountRequest"
            },
            "in": "body",
            "name": "validateAccountNotMeRequest",
            "description": "validateAccountNotMeRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/validateNotMe",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/validateEmailQuote": {
      "post": {
        "summary": "Create an account with a minimum set of data and send a quote by mail",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "validateEmailQuoteUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubscriptionContext"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ValidateQuoteEmailRequest"
            },
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/validateEmailQuote",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/accounts/changePasswordNotMe": {
      "post": {
        "summary": "Change the password of a user in Cognito",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "changePasswordNotMeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ChangePasswordNotMeRequest"
            },
            "in": "body",
            "name": "changePasswordNotMeRequest",
            "description": "changePasswordNotMeRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/accounts/changePasswordNotMe",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/getSubscriptionContext": {
      "get": {
        "summary": "Get the context linked to current subscription",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getPublicSubscriptionContextUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubscriptionContext"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "description": "x-correlationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/getSubscriptionContext",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/blacklists": {
      "get": {
        "summary": "Check if a account already exists in the database based on a mail address",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "verifyUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BlacklistResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "birthday",
            "x-example": "20051995",
            "description": "The birth date of the user",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "firstname",
            "x-example": "Bruno",
            "description": "The first name of the user",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "name",
            "x-example": "Franki",
            "description": "The name of the user",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "product",
            "x-example": "PropertyRenter",
            "description": "A user can be blacklisted against one or more products. The attribute allow filtering only on a specific product",
            "type": "string",
            "required": false,
            "enum": [
              "All",
              "PropertyRenter"
            ]
          }
        ],
        "tags": [
          "blacklist-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/blacklists",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {},
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/blacklistedUserAcceptances": {
      "post": {
        "summary": "Accept a blacklisted RSR user",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "acceptBlacklistedUserUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/AcceptBlacklistedRequest"
            },
            "in": "body",
            "name": "acceptBlacklistRequest",
            "description": "acceptBlacklistRequest",
            "required": true
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/blacklistedUserAcceptances",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {},
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/getSubscriptionContext": {
      "get": {
        "summary": "Get the context linked to current subscription",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getSubscriptionContextUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubscriptionContext"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-correlationId",
            "description": "x-correlationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/getSubscriptionContext",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-correlationId": "method.request.header.x-correlationId"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-CorrelationId'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/accounts/changeEmailNotMe": {
      "post": {
        "summary": "Cancel the change email of a user",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "changeEmailNotMeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ChangeEmailNotMeRequest"
            },
            "in": "body",
            "name": "changeEmailNotMeRequest",
            "description": "changeEmailNotMeRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/accounts/changeEmailNotMe",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/emailQuote": {
      "post": {
        "summary": "Create an account with a minimum set of data and send a quote by mail",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "emailQuoteUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateAccountResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/EmailQuoteRequest"
            },
            "in": "body",
            "name": "emailQuoteRequest",
            "description": "emailQuoteRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/emailQuote",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/accounts/{param0}/cognito": {
      "get": {
        "summary": "Get account info",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getCognitoAccountUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CognitoAccount"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "cognitoId",
            "type": "string",
            "required": true,
            "integrationName": "cognitoId"
          }
        ],
        "tags": [
          "account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/accounts/{cognitoId}/cognito",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.cognitoId": "method.request.path.param0"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/{param0}/summary": {
      "get": {
        "summary": "Gets the summary of a user",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getSummaryByUserIdUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountSummary"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "The user id for whom we should get the summary",
            "type": "string",
            "required": true,
            "integrationName": "cognitoId"
          }
        ],
        "tags": [
          "summary-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/{cognitoId}/summary",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.cognitoId": "method.request.path.param0"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/{param0}/switchNoData": {
      "post": {
        "summary": "Switch insurance (sign document)",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "switchInsuranceNoDataUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "The user id (cognito id)",
            "type": "string",
            "required": true,
            "integrationName": "userId"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/{userId}/switchNoData",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.userId": "method.request.path.param0",
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/accounts/{param0}/exists": {
      "get": {
        "summary": "Check if a account already exists in the database based on a mail address",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "emailExistUsingGET",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailExistResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "email",
            "type": "string",
            "required": true,
            "integrationName": "email"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/accounts/{email}/exists",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.email": "method.request.path.param0",
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/subscription/contexts/{param0}": {
      "patch": {
        "summary": "Update subscription context state",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "updateSubscriptionContextStateUsingPATCH",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "cognitoId",
            "type": "string",
            "required": true,
            "integrationName": "cognitoId"
          },
          {
            "schema": {
              "$ref": "#/definitions/UpdateSubscriptionContextState"
            },
            "in": "body",
            "name": "updateSubscriptionContextState",
            "description": "updateSubscriptionContextState",
            "required": true
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/subscription/contexts/{cognitoId}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.cognitoId": "method.request.path.param0"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "patch",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'PATCH'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/{param0}/contract/{param1}/proof": {
      "get": {
        "summary": "Get document contract proof",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getContractProofByCognitoIdUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "The cognito id for whom we should get the proof",
            "type": "string",
            "required": true,
            "integrationName": "cognitoId"
          },
          {
            "in": "path",
            "name": "param1",
            "description": "The policy number for whom we should get the proof",
            "type": "string",
            "required": true,
            "integrationName": "policyId"
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/{param0}/contract/{policyId}/proof",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.cognitoId": "method.request.path.param0",
            "integration.request.path.policyId": "method.request.path.param1"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/{param0}/switchNoItsme": {
      "post": {
        "summary": "Switch insurance (sign document)",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "switchInsuranceNoItsmeUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/SwitchRequest"
            },
            "in": "body",
            "name": "switchRequest",
            "description": "switchRequest",
            "required": true
          },
          {
            "in": "path",
            "name": "param0",
            "description": "The user id (cognito id)",
            "type": "string",
            "required": true,
            "integrationName": "userId"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/{userId}/switchNoItsme",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.userId": "method.request.path.param0",
            "integration.request.header.x-api-key": "method.request.header.x-api-key",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/{param0}/contract/{param1}": {
      "get": {
        "summary": "Gets the summary of a user",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "getContractByCognitoIdUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "The cognito id for whom we should get the summary",
            "type": "string",
            "required": true,
            "integrationName": "cognitoId"
          },
          {
            "in": "path",
            "name": "param1",
            "description": "The policy number for whom we should get the contract",
            "type": "string",
            "required": false,
            "integrationName": "policyNumber"
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/{param0}/contract/{policyNumber}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.cognitoId": "method.request.path.param0",
            "integration.request.path.policyNumber": "method.request.path.param1"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "get",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/properties/{param0}/switchCallback": {
      "post": {
        "summary": "Switch insurance callback (sign document)",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "switchInsuranceCallbackUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "The user id (cognito id)",
            "type": "string",
            "required": true,
            "integrationName": "cognitoId"
          },
          {
            "schema": {
              "$ref": "#/definitions/SwitchCallbackRequest"
            },
            "in": "body",
            "name": "switchCallbackRequest",
            "description": "switchCallbackRequest",
            "required": true
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/properties/{cognitoId}/switchCallback",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.cognitoId": "method.request.path.param0"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/party/v1/accounts/{param0}": {
      "put": {
        "summary": "Update the properties of an account",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "updateUsingPUT",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "partyId",
            "type": "string",
            "required": true,
            "integrationName": "partyId"
          },
          {
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            },
            "in": "body",
            "name": "updateAccountRequest",
            "description": "updateAccountRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-language",
            "x-example": "Fr",
            "description": "x-language",
            "type": "string",
            "required": true,
            "enum": [
              "Fr",
              "Nl",
              "En",
              "De"
            ]
          }
        ],
        "tags": [
          "account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/party/v1/accounts/{partyId}",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.partyId": "method.request.path.param0",
            "integration.request.header.x-language": "method.request.header.x-language"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "put",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Language'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/{param0}/switch": {
      "post": {
        "summary": "Switch insurance (sign document)",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "switchInsuranceUsingPOST",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SwitchResponse"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/SwitchRequest"
            },
            "in": "body",
            "name": "switchRequest",
            "description": "switchRequest",
            "required": true
          },
          {
            "in": "path",
            "name": "param0",
            "description": "The user id (cognito id)",
            "type": "string",
            "required": true,
            "integrationName": "userId"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/{userId}/switch",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.userId": "method.request.path.param0",
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "post",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/public/party/v1/properties/{param0}/contact": {
      "patch": {
        "summary": "Update a property account contact",
        "security": [
          {
            "apiKey": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "operationId": "updateContactUsingPATCH",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PropertyAccountContact"
            },
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Business error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/JsonException"
            },
            "description": "Internal error",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "param0",
            "description": "email",
            "type": "string",
            "required": true,
            "integrationName": "email"
          },
          {
            "schema": {
              "$ref": "#/definitions/PropertyAccountContact"
            },
            "in": "body",
            "name": "updateContactRequest",
            "description": "updateContactRequest",
            "required": true
          },
          {
            "in": "header",
            "name": "x-api-key",
            "description": "x-api-key",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "property-account-resource"
        ],
        "consumes": [
          "application/json"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "https://${stageVariables.VPCNLB}/test1-exp-v1/public/party/v1/properties/{email}/contact",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "requestParameters": {
            "integration.request.path.email": "method.request.path.param0",
            "integration.request.header.x-api-key": "method.request.header.x-api-key"
          },
          "passthroughBehavior": "when_no_match",
          "connectionType": "VPC_LINK",
          "connectionId": "${stageVariables.VPCLINK}",
          "httpMethod": "patch",
          "type": "http_proxy"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'PATCH'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "host": "localhost:8080",
  "securityDefinitions": {
    "apiKey": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "definitions": {
    "ChangePasswordNotMeRequest": {
      "type": "object",
      "title": "ChangePasswordNotMeRequest",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "Unique key sent by mail to verify the owner",
          "type": "string"
        }
      }
    },
    "JsonException": {
      "type": "object",
      "title": "JsonException",
      "required": [
        "code",
        "id",
        "message"
      ],
      "properties": {
        "trace": {
          "description": "The stack trace of the JAVA exception. Currently not sent",
          "type": "string"
        },
        "code": {
          "description": "A code that identify the type of error. Can be used by a front end system to display an error message in the correct language",
          "type": "string"
        },
        "id": {
          "description": "ID that identifies uniquely an error that occured. This value can be used in Kibana to find the call in error. This ID can be displayed to a end user",
          "type": "string"
        },
        "message": {
          "description": "A message that describes the error. This message is generic to not send critical data to a end user. The detail of the error is available in the logs",
          "type": "string"
        },
        "params": {
          "description": "This can be used by a front end system to display an error message with dynamic placeholder",
          "type": "object"
        }
      }
    },
    "PriceDetails": {
      "type": "object",
      "title": "PriceDetails",
      "properties": {
        "priceNoTax": {
          "format": "double",
          "type": "number"
        },
        "priceWithTax": {
          "format": "double",
          "type": "number"
        },
        "taxAbt": {
          "format": "double",
          "type": "number"
        },
        "taxFdh": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AccountSummary": {
      "type": "object",
      "title": "AccountSummary",
      "properties": {
        "bankNumber": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/PropertyAccountContactAddress"
        },
        "paymentMean": {
          "$ref": "#/definitions/AccountSummaryResponsePaymentMean"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountSummaryPolicy"
          }
        },
        "subscriptionState": {
          "type": "string",
          "enum": [
            "QuoteCreated",
            "QuoteAccepted",
            "PendingEmailVerification",
            "EmailVerified",
            "Switch",
            "SwitchNoItsme",
            "SwitchSigned",
            "PaymentDone"
          ]
        },
        "nextPaymentMean": {
          "$ref": "#/definitions/AccountSummaryResponsePaymentMean"
        },
        "firstName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "property": {
          "$ref": "#/definitions/PropertyAccountProperty"
        },
        "partyId": {
          "type": "string"
        },
        "card": {
          "$ref": "#/definitions/AccountSummaryResponseCard"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "CreateStripeSubscriptionResponse": {
      "type": "object",
      "title": "CreateStripeSubscriptionResponse",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "completed",
            "released",
            "canceled",
            "not_started",
            "active"
          ]
        }
      }
    },
    "PaypalSubscription": {
      "type": "object",
      "title": "PaypalSubscription",
      "required": [
        "contact"
      ],
      "properties": {
        "contact": {
          "description": "Subscription's contact information",
          "$ref": "#/definitions/PaypalSubscriptionContact"
        },
        "policy": {
          "description": "Information about new policy",
          "$ref": "#/definitions/PaypalSubscriptionPolicy"
        }
      }
    },
    "SwitchRequest": {
      "type": "object",
      "title": "SwitchRequest",
      "required": [
        "insuranceName",
        "policyEndDate"
      ],
      "properties": {
        "policyNumber": {
          "description": "The user's current insurance policy number",
          "type": "string"
        },
        "insuranceName": {
          "description": "The name of the insurance with which the user is currently insured. Must be an insurance that has an agreement with Ethias",
          "type": "string"
        },
        "policyEndDate": {
          "format": "date-time",
          "description": "The user's current insurance policy end date",
          "type": "string"
        }
      }
    },
    "CreatePaypalSubscriptionResponse": {
      "type": "object",
      "title": "CreatePaypalSubscriptionResponse",
      "properties": {
        "id": {
          "type": "string"
        },
        "urlToSubscribe": {
          "type": "string"
        }
      }
    },
    "ValidateQuoteEmailRequest": {
      "type": "object",
      "title": "ValidateQuoteEmailRequest",
      "required": [
        "key",
        "nonce",
        "quoteId"
      ],
      "properties": {
        "nonce": {
          "description": "A random string sent by mail to verify the email address",
          "type": "string"
        },
        "key": {
          "description": "Unique key sent by mail to verify the email address",
          "type": "string"
        },
        "quoteId": {
          "description": "The quote ID correspoding to the quote received by mail",
          "type": "string"
        }
      }
    },
    "BlacklistResponse": {
      "type": "object",
      "title": "BlacklistResponse",
      "required": [
        "blacklisted"
      ],
      "properties": {
        "reason": {
          "description": "The reason why the user is blacklisted",
          "type": "string",
          "enum": [
            "ProvenFraud",
            "HighSinistrality",
            "BadPayer"
          ]
        },
        "blacklisted": {
          "description": "A flag that indicates if the user is blacklisted or not",
          "type": "boolean"
        },
        "nbClaim": {
          "format": "int32",
          "type": "integer"
        },
        "claimDate": {
          "format": "date-time",
          "type": "string"
        },
        "nbResponsableClaim": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ValidateAccountRequest": {
      "type": "object",
      "title": "ValidateAccountRequest",
      "required": [
        "key",
        "nonce"
      ],
      "properties": {
        "nonce": {
          "description": "A random string sent by mail to verify the email address",
          "type": "string"
        },
        "key": {
          "description": "Unique key sent by mail to verify the email address",
          "type": "string"
        }
      }
    },
    "ChangeEmailRequest": {
      "type": "object",
      "title": "ChangeEmailRequest",
      "required": [
        "key"
      ],
      "properties": {
        "origin": {
          "description": "The origin of the call (web or mobile)<br/>If the origin is from the web, one needs to send a notification to the mobile app to logout the user<br/><br/>Defaults to: mobile",
          "type": "string",
          "enum": [
            "web",
            "mobile"
          ]
        },
        "key": {
          "description": "A unique key sent by mail. This key is the primary key in DynamoDB",
          "type": "string"
        }
      }
    },
    "SubscriptionContext": {
      "type": "object",
      "title": "SubscriptionContext",
      "required": [
        "currentInsurance",
        "quoteExpired",
        "quoteId"
      ],
      "properties": {
        "quoteExpired": {
          "description": "Flag to indicate if the quote is still valid",
          "type": "boolean"
        },
        "contact": {
          "description": "Account contact's information",
          "$ref": "#/definitions/PropertyAccountContact"
        },
        "property": {
          "description": "Contact's property information",
          "$ref": "#/definitions/PropertyAccountProperty"
        },
        "state": {
          "description": "The step where the user stopped",
          "type": "string",
          "enum": [
            "QuoteByMail",
            "Created",
            "Validated",
            "Switch",
            "SwitchNoItsme",
            "SwitchSigned",
            "PaymentDone"
          ]
        },
        "currentInsurance": {
          "description": "The actual client's insurance",
          "$ref": "#/definitions/SubscriptionCurrentInsurance"
        },
        "quoteId": {
          "description": "The active quote ID linked to the subscription",
          "type": "string"
        }
      }
    },
    "CreateAccountResponse": {
      "type": "object",
      "title": "CreateAccountResponse",
      "required": [
        "correlationId",
        "emailExist"
      ],
      "properties": {
        "isValidatedEmail": {
          "description": "Check if account is confirmed in cognito",
          "type": "boolean"
        },
        "hasContract": {
          "description": "Check if a policy exist in salesforce",
          "type": "boolean"
        },
        "emailExist": {
          "description": "Check if email exist in cognito",
          "type": "boolean"
        },
        "correlationId": {
          "description": "Unique ID to use in requests to change email or resend email",
          "type": "string"
        },
        "validation": {
          "description": "check if blacklisted or not",
          "type": "string",
          "enum": [
            "accepted",
            "pending",
            "refused"
          ]
        }
      }
    },
    "ChangeEmailNotMeRequest": {
      "type": "object",
      "title": "ChangeEmailNotMeRequest",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "A unique key sent by mail. This key is the primary key in DynamoDB",
          "type": "string"
        }
      }
    },
    "SwitchResponse": {
      "type": "object",
      "title": "SwitchResponse",
      "required": [
        "signUrl"
      ],
      "properties": {
        "signUrl": {
          "description": "The URL to sign the document",
          "type": "string"
        }
      }
    },
    "FloodResponse": {
      "type": "object",
      "title": "FloodResponse",
      "properties": {
        "s3FloodInfoId": {
          "description": "s3FloodId",
          "type": "string"
        },
        "rockestateResponse": {
          "description": "rockestateResponse",
          "type": "string"
        }
      }
    },
    "PropertyAccount": {
      "type": "object",
      "title": "PropertyAccount",
      "properties": {
        "referrer": {
          "description": "The referer who brought the new client. This represents the external ID of the business provider in Salesfroce",
          "type": "string"
        },
        "cancellation": {
          "description": "Information about existing policy",
          "$ref": "#/definitions/PropertyAccountCancellation"
        },
        "contact": {
          "description": "Account contact's information",
          "$ref": "#/definitions/PropertyAccountContact"
        },
        "property": {
          "description": "Contact's property information",
          "$ref": "#/definitions/PropertyAccountProperty"
        },
        "quoteId": {
          "description": "Use last accepted quote by customer",
          "type": "string"
        },
        "policy": {
          "description": "Information about possible new policy",
          "$ref": "#/definitions/PropertyAccountPolicy"
        }
      }
    },
    "ResendEmailRequest": {
      "type": "object",
      "title": "ResendEmailRequest",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "The recipient email address",
          "type": "string"
        }
      }
    },
    "EmailQuoteRequest": {
      "type": "object",
      "title": "EmailQuoteRequest",
      "properties": {
        "referrer": {
          "description": "The referer who brought the new client. This represents the external ID of the business provider in Salesfroce",
          "type": "string"
        },
        "contact": {
          "description": "Account contact's information",
          "$ref": "#/definitions/EmailQuoteRequestContact"
        },
        "property": {
          "description": "Contact's property information",
          "$ref": "#/definitions/PropertyAccountProperty"
        },
        "policy": {
          "description": "Information about possible new policy",
          "$ref": "#/definitions/PropertyAccountPolicy"
        }
      }
    },
    "StripeSubscription": {
      "type": "object",
      "title": "StripeSubscription",
      "required": [
        "contact"
      ],
      "properties": {
        "contact": {
          "description": "Subscription's contact information",
          "$ref": "#/definitions/StripeSubscriptionContact"
        },
        "policy": {
          "description": "Information about new policy",
          "$ref": "#/definitions/StripeSubscriptionPolicy"
        }
      }
    },
    "Options": {
      "type": "object",
      "title": "Options",
      "properties": {
        "price": {
          "format": "double",
          "type": "number"
        },
        "priceDetails": {
          "$ref": "#/definitions/PriceDetails"
        },
        "id": {
          "type": "string",
          "enum": [
            "TheftAndVandalism"
          ]
        }
      }
    },
    "UpdateAccountRequest": {
      "type": "object",
      "title": "UpdateAccountRequest",
      "properties": {
        "bankNumber": {
          "description": "If the field is present and different that the current bank number, salesforce are updated",
          "type": "string"
        },
        "phoneNumber": {
          "description": "If the field is present and different that the current phone number, cognito and salesforce are updated",
          "type": "string"
        },
        "firebaseToken": {
          "description": "If the field is present put it in cognito",
          "type": "string"
        },
        "email": {
          "description": "If the field is present and different that the current email address, a mail is sent to confirm this new email address",
          "type": "string"
        }
      }
    },
    "UpdateSubscriptionContextState": {
      "type": "object",
      "title": "UpdateSubscriptionContextState",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "Subscription context",
          "type": "string",
          "enum": [
            "QuoteCreated",
            "QuoteAccepted",
            "PendingEmailVerification",
            "EmailVerified",
            "Switch",
            "SwitchNoItsme",
            "SwitchSigned",
            "PaymentDone"
          ]
        }
      }
    },
    "ChangePasswordRequest": {
      "type": "object",
      "title": "ChangePasswordRequest",
      "required": [
        "key",
        "password"
      ],
      "properties": {
        "password": {
          "description": "The new password",
          "type": "string"
        },
        "key": {
          "description": "Unique key sent by mail to verify the owner",
          "type": "string"
        }
      }
    },
    "EmailExistResponse": {
      "type": "object",
      "title": "EmailExistResponse",
      "required": [
        "exist"
      ],
      "properties": {
        "exist": {
          "description": "A flag that indicates if the account exists or not in the database",
          "type": "boolean"
        }
      }
    },
    "ResetPasswordRequest": {
      "type": "object",
      "title": "ResetPasswordRequest",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "The recipient email address",
          "type": "string"
        }
      }
    },
    "Pricing": {
      "type": "object",
      "title": "Pricing",
      "properties": {
        "perils": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Peril"
          }
        },
        "maxCoverage": {
          "format": "double",
          "type": "number"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "occurance": {
          "type": "string",
          "enum": [
            "Daily",
            "Monthly",
            "Weekly",
            "Yearly"
          ]
        }
      }
    },
    "AcceptBlacklistedRequest": {
      "type": "object",
      "title": "AcceptBlacklistedRequest",
      "required": [
        "accepted",
        "userId"
      ],
      "properties": {
        "accepted": {
          "description": "A flag to indicate if the user is accepted or should be considered as blacklisted",
          "type": "boolean"
        },
        "userId": {
          "description": "The internal id of the user (cognito ID)",
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "title": "Health",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "OK",
            "NOK"
          ]
        }
      }
    },
    "AccountPublic": {
      "type": "object",
      "title": "AccountPublic",
      "required": [
        "address",
        "email",
        "property"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/PropertyAccountContactAddress"
        },
        "property": {
          "$ref": "#/definitions/PropertyAccountProperty"
        },
        "email": {
          "description": "email",
          "type": "string"
        }
      }
    },
    "CognitoAccount": {
      "type": "object",
      "title": "CognitoAccount",
      "required": [
        "email",
        "firstname",
        "name",
        "partyId",
        "preferredUsername"
      ],
      "properties": {
        "firstname": {
          "description": "Party firstname",
          "type": "string"
        },
        "preferredUsername": {
          "description": "Party id, unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Party name",
          "type": "string"
        },
        "partyId": {
          "description": "Party id, unique identifier",
          "type": "string"
        },
        "email": {
          "description": "Party email",
          "type": "string"
        }
      }
    },
    "GetMyQuoteResponse": {
      "type": "object",
      "title": "GetMyQuoteResponse",
      "properties": {
        "abexStartDate": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Options"
          }
        },
        "abex": {
          "format": "int32",
          "type": "integer"
        },
        "risk": {
          "format": "int32",
          "type": "integer"
        },
        "isNewQuote": {
          "type": "boolean"
        },
        "pricing": {
          "$ref": "#/definitions/Pricing"
        },
        "quoteId": {
          "type": "string"
        }
      }
    },
    "Peril": {
      "type": "object",
      "title": "Peril",
      "properties": {
        "priceDetails": {
          "$ref": "#/definitions/PriceDetails"
        },
        "type": {
          "type": "string",
          "enum": [
            "Fire",
            "PJ",
            "Theft",
            "Storm",
            "Disaster",
            "Attack"
          ]
        }
      }
    },
    "SwitchCallbackRequest": {
      "type": "object",
      "title": "SwitchCallbackRequest",
      "required": [
        "status"
      ],
      "properties": {
        "packageId": {
          "description": "The packageId that can be used to retrieve the document from Connective",
          "type": "string"
        },
        "context": {
          "description": "The context that was sent to DMS service in the generateAndSign request",
          "$ref": "#/definitions/SwitchCallbackRequestSwitchContext"
        },
        "documentId": {
          "description": "The documentId that can be used to retrieve the document from Connective",
          "type": "string"
        },
        "status": {
          "description": "The status returned by Connective",
          "type": "string",
          "enum": [
            "Draft",
            "Pending",
            "Finished",
            "Rejected",
            "Revoked",
            "Expired",
            "Failed"
          ]
        }
      }
    },
    "Empty": {
      "title": "Empty Schema",
      "type": "object"
    },
    "PropertyAccountCancellation": {
      "type": "object",
      "title": "PropertyAccountCancellation",
      "required": [
        "companyName",
        "contractNumber",
        "dueDate"
      ],
      "properties": {
        "companyName": {
          "description": "Compagny name",
          "type": "string"
        },
        "dueDate": {
          "description": "Contract end date (dd/MM/yyyy)",
          "type": "string"
        },
        "contractNumber": {
          "description": "Contract number",
          "type": "string"
        }
      }
    },
    "AccountSummaryResponsePolicyCoverage": {
      "type": "object",
      "title": "AccountSummaryResponsePolicyCoverage",
      "properties": {
        "premiumAmount": {
          "format": "double",
          "type": "number"
        },
        "coverageName": {
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "deductibleAmount": {
          "format": "double",
          "type": "number"
        },
        "limitAmount": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "discount": {
          "format": "double",
          "type": "number"
        },
        "limitPercentage": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "effectiveDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AccountSummaryResponsePolicyCustomerPropertyAddress": {
      "type": "object",
      "title": "AccountSummaryResponsePolicyCustomerPropertyAddress",
      "properties": {
        "country": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "latitude": {
          "format": "double",
          "type": "number"
        },
        "postalCode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "longitude": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PropertyAccountContactAddress": {
      "type": "object",
      "title": "PropertyAccountContactAddress",
      "required": [
        "city",
        "countryCode",
        "postalCode",
        "streetName",
        "streetNumber"
      ],
      "properties": {
        "streetName": {
          "description": "Street name",
          "type": "string"
        },
        "streetNumber": {
          "description": "Street number",
          "type": "string"
        },
        "city": {
          "description": "City name",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "type": "string"
        },
        "box": {
          "description": "House box number",
          "type": "string"
        }
      }
    },
    "EmailQuoteRequestContact": {
      "type": "object",
      "title": "EmailQuoteRequestContact",
      "required": [
        "address",
        "email"
      ],
      "properties": {
        "address": {
          "description": "Contact address",
          "$ref": "#/definitions/PropertyAccountContactAddress"
        },
        "email": {
          "description": "Contact email",
          "type": "string"
        }
      }
    },
    "PropertyAccountProperty": {
      "type": "object",
      "title": "PropertyAccountProperty",
      "required": [
        "rent",
        "type"
      ],
      "properties": {
        "s3FloodId": {
          "description": "Document id store in S3 containing rockestate info",
          "type": "string"
        },
        "groundFloor": {
          "description": "Flag to indicate if the appartment is located on the ground floor or not",
          "type": "boolean"
        },
        "type": {
          "description": "Type of property",
          "type": "string",
          "enum": [
            "Apartment",
            "House",
            "Villa"
          ]
        },
        "rent": {
          "format": "double",
          "description": "House rent",
          "type": "number"
        }
      }
    },
    "SwitchCallbackRequestSwitchContext": {
      "type": "object",
      "title": "SwitchCallbackRequestSwitchContext",
      "properties": {
        "cognitoId": {
          "type": "string"
        },
        "policyNumber": {
          "type": "string"
        },
        "policyEndDate": {
          "type": "string"
        },
        "insurerName": {
          "type": "string"
        }
      }
    },
    "AccountSummaryResponsePaymentMean": {
      "type": "object",
      "title": "AccountSummaryResponsePaymentMean",
      "properties": {
        "bankNumber": {
          "type": "string"
        },
        "organism": {
          "type": "string"
        },
        "refundBankNumber": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "last4Digits": {
          "type": "string"
        }
      }
    },
    "PaypalSubscriptionContact": {
      "type": "object",
      "title": "PaypalSubscriptionContact",
      "properties": {
        "paymentCurrency": {
          "description": "Currency of payment",
          "type": "string",
          "enum": [
            "eur"
          ]
        }
      }
    },
    "StripeSubscriptionContact": {
      "type": "object",
      "title": "StripeSubscriptionContact",
      "required": [
        "paymentMethod"
      ],
      "properties": {
        "paymentMethod": {
          "description": "Info about paiement (card linked to a user)",
          "type": "string"
        },
        "paymentCurrency": {
          "description": "Currency of payment",
          "type": "string",
          "enum": [
            "eur"
          ]
        }
      }
    },
    "PropertyAccountPolicy": {
      "type": "object",
      "title": "PropertyAccountPolicy",
      "required": [
        "startDate"
      ],
      "properties": {
        "options": {
          "description": "Selected quote options",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "TheftAndVandalism"
            ]
          }
        },
        "startDate": {
          "description": "Contract start date (dd/MM/yyyy)",
          "type": "string"
        }
      }
    },
    "AccountSummaryResponseCard": {
      "type": "object",
      "title": "AccountSummaryResponseCard",
      "properties": {
        "type": {
          "type": "string"
        },
        "last4Digits": {
          "type": "string"
        }
      }
    },
    "PaypalSubscriptionPolicy": {
      "type": "object",
      "title": "PaypalSubscriptionPolicy",
      "properties": {
        "startDate": {
          "description": "Billing start date (dd/MM/yyyy)",
          "type": "string"
        }
      }
    },
    "AccountSummaryResponsePolicyCustomerProperty": {
      "type": "object",
      "title": "AccountSummaryResponsePolicyCustomerProperty",
      "properties": {
        "address": {
          "$ref": "#/definitions/AccountSummaryResponsePolicyCustomerPropertyAddress"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "propertyType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PropertyAccountContact": {
      "type": "object",
      "title": "PropertyAccountContact",
      "required": [
        "address",
        "birthDate",
        "email",
        "firstname",
        "name",
        "password",
        "phoneNumber"
      ],
      "properties": {
        "firstname": {
          "description": "Contact firstame",
          "type": "string"
        },
        "password": {
          "description": "Contact password",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Contact phone number",
          "type": "string"
        },
        "address": {
          "description": "Contact address",
          "$ref": "#/definitions/PropertyAccountContactAddress"
        },
        "name": {
          "description": "Contact name",
          "type": "string"
        },
        "birthDate": {
          "description": "Contact birthdate (dd/MM/yyyy)",
          "type": "string"
        },
        "email": {
          "description": "Contact email",
          "type": "string"
        },
        "marketingOptin": {
          "description": "Flag to indicate if the user agrees to be contacted for marketing purposes",
          "type": "boolean"
        }
      }
    },
    "StripeSubscriptionPolicy": {
      "type": "object",
      "title": "StripeSubscriptionPolicy",
      "properties": {
        "startDate": {
          "description": "Billing start date (dd/MM/yyyy)",
          "type": "string"
        }
      }
    },
    "AccountSummaryPolicy": {
      "type": "object",
      "title": "AccountSummaryPolicy",
      "properties": {
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "suspensionDate": {
          "format": "date-time",
          "type": "string"
        },
        "showSuspendedBanner": {
          "type": "boolean"
        },
        "saleDate": {
          "format": "date-time",
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "coverages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountSummaryResponsePolicyCoverage"
          }
        },
        "accountId": {
          "type": "string"
        },
        "insuredProperty": {
          "$ref": "#/definitions/AccountSummaryResponsePolicyCustomerProperty"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "effectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "cancellationDate": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "SubscriptionCurrentInsurance": {
      "type": "object",
      "title": "SubscriptionCurrentInsurance",
      "properties": {
        "policyNumber": {
          "type": "string"
        },
        "insuranceName": {
          "type": "string"
        },
        "policyEndDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {},
    "description": "Api Documentation",
    "termsOfService": "urn:tos",
    "title": "Test githubaction API v1",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "account-resource",
      "description": "Account Resource"
    },
    {
      "name": "blacklist-resource",
      "description": "Blacklist Resource"
    },
    {
      "name": "health-resource",
      "description": "Health Resource"
    },
    {
      "name": "paypal-resource",
      "description": "Paypal Resource"
    },
    {
      "name": "property-account-resource",
      "description": "Property Account Resource"
    },
    {
      "name": "property-resource",
      "description": "Property Resource"
    },
    {
      "name": "scheduler-resource",
      "description": "Scheduler Resource"
    },
    {
      "name": "stripe-resource",
      "description": "Stripe Resource"
    },
    {
      "name": "summary-resource",
      "description": "Summary Resource"
    }
  ],
  "x-amazon-apigateway-binary-media-types": [
    ""
  ]
}